#pragma once
//Имена файлов подбирать в соответствии с тем что описывается
//MyCat или my-cat, один стиль именования файлов

//#ifndef __MY_CAT_H__
//#define __MY_CAT_H__


#include <glib-object.h> //Инструментарий для создания объектов

//Все объявления распологаються внутри макросов
//(G_BEGIN_DECLS,  G_END_DECLS) для совместимости С++
G_BEGIN_DECLS

//Если выдаёт ошибку на тип MyCat нужно добавить,
//в первых версиях GTK4 не работает G_DECLARE_FINAL_TYPE правильно
//typedef struct _MyCat MyCat;

//Макрос подставит в место MY_TYPE_CAT функцию my_cat_get_type()
//my_cat_get_type() создаётся автоматом GObject,
//система типов GType по верх типов "С", она нужна для
//объектно ориентированное симулирование и межъязыковую кроссплатформенность,
//написанные объекта GTK будут работать на всех языках в которых есть GTK
//Возвращает специальную структуру системы типов GType которая идентифицирует родителя в потомке.
#define MY_TYPE_CAT my_cat_get_type()
		//NAMESPACE_TYPE_OBJECTNAME название MY_TYPE_CAT

//Иструменты GObject макросы
//G_DECLARE_FINAL_TYPE создаётся тип от которого наследоваться нельзя, нет функций для перегрузки
//G_DECLARE_DERIVABLE_TYPE создаётся тип от которого наследоваться можно
//G_DECLARE_INTERFACE объявляются интерфейсы

//1 Имя объекта, 2 змейкой, 3 namespace, 4 Objectname Caps, 5 Объект от которого наследуются
G_DECLARE_FINAL_TYPE(MyCat, my_cat, MY, CAT, GObject)

//Структура класса нужна для наследования, но FINAL тип нельзя наследоваться и редактировать класс нельзя
//Необходимо структуру объекта описать в "С" файле

// Методы

void my_cat_meow(MyCat* self);
MyCat* my_cat_new();

G_END_DECLS

//#endif

//Полиморфизма в С нет
//придерживаться установленной системы имён в место полиморфизма
//Namespace - краткое уникальное название проекта, библиотеки, (пространство имён)
//Objectname - имя объекта
//NamespaceObjectname - название для типа объекта (структуры)
//NamespaceObjectnameClass - название класса
//namespace_objectname_method_name(...) - название методов
/*	NAMESPACE_TYPE_OBJECTNAME
	NAMESPACE_OBJECTNAME
	NAMESPACE_IS_OBJECTNAME
	GObject создаёт автоматически макросы для использования*/

//Каждый объект - в новом (отдельном) файле "С" и "h" для обеспечения инкапсуляции
//Члены структуры объекта инкапсулированы (поля объекта приватные по умолчанию)
